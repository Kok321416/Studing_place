from django.core.management.base import BaseCommand
from django.core.exceptions import ValidationError
from courses.validators import validate_youtube_url


class Command(BaseCommand):
    help = '–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤–∞–ª–∏–¥–∞—Ç–æ—Ä YouTube —Å—Å—ã–ª–æ–∫ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ URL'

    def add_arguments(self, parser):
        parser.add_argument(
            '--url',
            type=str,
            help='–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
        )
        parser.add_argument(
            '--all',
            action='store_true',
            help='–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ URL'
        )

    def handle(self, *args, **options):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤–∞–ª–∏–¥–∞—Ç–æ—Ä YouTube —Å—Å—ã–ª–æ–∫"""
        
        if options['url']:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π URL
            self.test_single_url(options['url'])
        else:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –ø—Ä–∏–º–µ—Ä—ã
            self.test_all_examples()

    def test_single_url(self, url):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–¥–∏–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π URL"""
        self.stdout.write(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ URL: {url}")
        self.stdout.write("-" * 50)
        
        try:
            validate_youtube_url(url)
            self.stdout.write(
                self.style.SUCCESS(f"‚úÖ URL –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é: {url}")
            )
        except ValidationError as e:
            self.stdout.write(
                self.style.ERROR(f"‚ùå URL –æ—Ç–∫–ª–æ–Ω–µ–Ω: {e}")
            )

    def test_all_examples(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –ø—Ä–∏–º–µ—Ä—ã URL"""
        self.stdout.write(
            self.style.SUCCESS("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è YouTube –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞")
        )
        self.stdout.write("=" * 60)
        
        # –í–∞–ª–∏–¥–Ω—ã–µ YouTube —Å—Å—ã–ª–∫–∏
        valid_urls = [
            'https://www.youtube.com/watch?v=dQw4w9WgXcQ',
            'https://youtube.com/watch?v=dQw4w9WgXcQ', 
            'https://youtu.be/dQw4w9WgXcQ',
            'https://m.youtube.com/watch?v=dQw4w9WgXcQ',
            'https://music.youtube.com/watch?v=dQw4w9WgXcQ',
            'https://gaming.youtube.com/watch?v=dQw4w9WgXcQ',
        ]
        
        # –ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ —Å—Å—ã–ª–∫–∏
        invalid_urls = [
            'https://vimeo.com/123456789',
            'https://rutube.ru/video/123/',
            'https://stepik.org/course/123/',
            'https://example.com/video.mp4',
            'https://dailymotion.com/video/123',
            'https://twitch.tv/username',
            'http://youtube.com/watch?v=123',  # HTTP –≤–º–µ—Å—Ç–æ HTTPS
        ]
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω—ã–µ URL
        self.stdout.write("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –í–ê–õ–ò–î–ù–´–• YouTube —Å—Å—ã–ª–æ–∫:")
        self.stdout.write("-" * 40)
        
        valid_passed = 0
        for url in valid_urls:
            try:
                validate_youtube_url(url)
                self.stdout.write(f"  ‚úÖ {url}")
                valid_passed += 1
            except ValidationError as e:
                self.stdout.write(
                    self.style.ERROR(f"  ‚ùå –û–®–ò–ë–ö–ê: {url} - {e}")
                )
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ URL
        self.stdout.write("\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ù–ï–í–ê–õ–ò–î–ù–´–• —Å—Å—ã–ª–æ–∫:")
        self.stdout.write("-" * 40)
        
        invalid_blocked = 0
        for url in invalid_urls:
            try:
                validate_youtube_url(url)
                self.stdout.write(
                    self.style.ERROR(f"  ‚ö†Ô∏è  –ü–†–û–ü–£–©–ï–ù: {url}")
                )
            except ValidationError as e:
                self.stdout.write(f"  ‚úÖ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù: {url}")
                self.stdout.write(f"     –ü—Ä–∏—á–∏–Ω–∞: {e}")
                invalid_blocked += 1
        
        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        self.stdout.write("\n" + "=" * 60)
        self.stdout.write(
            self.style.SUCCESS(
                f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:"
                f"\n   –í–∞–ª–∏–¥–Ω—ã—Ö URL –ø—Ä–æ—à–ª–æ: {valid_passed}/{len(valid_urls)}"
                f"\n   –ù–µ–≤–∞–ª–∏–¥–Ω—ã—Ö URL –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: {invalid_blocked}/{len(invalid_urls)}"
                f"\n   –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£–°–ü–ï–®–ù–û' if valid_passed == len(valid_urls) and invalid_blocked == len(invalid_urls) else '‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´'}"
            )
        )
        
        # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
        self.stdout.write(
            self.style.SUCCESS(
                f"\nüí° –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:"
                f"\n   python manage.py test_youtube_validator --all"
                f"\n   python manage.py test_youtube_validator --url 'https://youtube.com/watch?v=123'"
            )
        )
